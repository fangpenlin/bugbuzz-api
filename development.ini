###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:bugbuzz_app]
use = egg:bugbuzz_service

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_tm
#    pyramid_debugtoolbar

# wheter to output prettified json
api.allowed_origins = 
    http://127.0.0.1
    http://localhost
    http://::1

sqlalchemy.url = postgres://bugbuzz:bugbuzz@localhost/bugbuzz

pubnub.publish_key = pub-c-ec7fa985-1365-495c-83da-c796f4b22a2a
pubnub.subscribe_key = sub-c-740140b8-de7c-11e4-bb6f-0619f8945a4f

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

[filter:translogger]
use = egg:Paste#translogger
setup_console_handler = False

[pipeline:main]
pipeline = translogger
           bugbuzz_app

[alembic]
# path to migration scripts
script_location = alembic

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# max length of characters to apply to the
# "slug" field
#truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# sqlalchemy.url = sqlite:///%(here)s/justitia.sqlite
sqlalchemy.url = postgres://world:world@localhost/world


###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 9090

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, bugbuzz_service, sqlalchemy, requests, waitress

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_bugbuzz_service]
level = DEBUG
handlers =
qualname = bugbuzz_service

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[logger_requests]
level = WARN
handlers =
qualname = requests.packages.urllib3.connectionpool

[logger_waitress]
level = DEBUG
handlers =
qualname = waitress

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
